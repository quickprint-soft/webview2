name: Download and Unpack NuGet Packages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  download-and-unpack:
    runs-on: windows-latest

    env:
      WEBVIEW2_VERSION: 1.0.1264.42
      WIL_VERSION: 1.0.210803.1

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install NuGet CLI
      run: |
        choco install nuget.commandline --no-progress -y

    - name: Download WebView2 SDK
      run: nuget install Microsoft.Web.WebView2 -Version ${{ env.WEBVIEW2_VERSION }} -OutputDirectory ./packages

    - name: Download WIL
      run: nuget install Microsoft.Windows.ImplementationLibrary -Version ${{ env.WIL_VERSION }} -OutputDirectory ./packages

    - name: Unpack WebView2 SDK
      shell: bash
      run: |
        unzip ./packages/Microsoft.Web.WebView2.${{ env.WEBVIEW2_VERSION }}/Microsoft.Web.WebView2.${{ env.WEBVIEW2_VERSION }}.nupkg -d ./packages/WebView2
        rm -fr ./packages/Microsoft.Web.WebView*
        rm -fr ./packages/WebView2/{lib,package,tools,Microsoft.Web.WebView2.nuspec,LICENSE,[Content_Types].xml,runtimes}
        ls ./packages/WebView2
        ls ./packages/WebView2/build
        mv ./packages/WebView2/build/native/include ./packages/WebView2/include
        mkdir ./package/WebView2/lib
        mv ./packages/WebView2/build/native/x64 ./package/WebView2/lib
        mv ./packages/WebView2/build/native/x86 ./package/WebView2/lib
        mv ./packages/WebView2/build/native/arm64 ./package/WebView2/lib

    - name: Unpack WIL
      shell: bash
      run: |
        unzip ./packages/Microsoft.Windows.ImplementationLibrary.${{ env.WIL_VERSION }}/Microsoft.Windows.ImplementationLibrary.${{ env.WIL_VERSION }}.nupkg -d ./packages/WIL
        rm -fr ./packages/Microsoft.Windows.ImplementationLibrary*
        rm -fr ./packages/WIL/{build,package,Microsoft.Windows.ImplementationLibrary.nuspec,LICENSE,[Content_Types].xml,ThirdPartyNotices.txt}
        

    - name: Upload Release artifact (x64)
      uses: actions/upload-artifact@v4
      with:
        name: webview2
        path: packages
        
  create-release:
    runs-on: ubuntu-latest
    needs: download-and-unpack
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up environment
        run: echo "RELEASE_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Install GitHub CLI
        uses: sersoft-gmbh/setup-gh-cli-action@v2

      - name: Delete existing release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release delete $RELEASE_DATE --yes || true

      - name: Create new release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create $RELEASE_DATE -t "Release $RELEASE_DATE" -n "Automated release for $RELEASE_DATE"


      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Compress Artifacts
        run: |
          cd ./artifacts
          zip -r ./packages.zip ./*
 

      - name: Generate MD5 Checksums
        run: |
          > ./artifacts/filelist.txt  # 清空或创建 filelist.txt 文件
          for file in ./artifacts/*.zip; do
            # Calculate MD5 checksum
            md5sum=$(md5sum "$file" | awk '{ print $1 }')
            
            # Write to filelist.txt
            echo "$(basename "$file") | ${md5sum}" >> ./artifacts/filelist.txt
          done
          
      - name: Upload Artifacts to Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ./artifacts
          gh release upload $RELEASE_DATE ./packages.zip
          gh release upload $RELEASE_DATE ./filelist.txt
